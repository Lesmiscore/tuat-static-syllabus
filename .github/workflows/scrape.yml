name: Scrape syllabus

on:
  schedule:
    - cron:  '0 0 * * 2'
  workflow_dispatch:

jobs:
  scrape:
    strategy:
      matrix:
        lang: [ja, en]
        pages: [odd, even]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install deps
        run: npm i
      - name: Run scraper
        run: ./misc/ci_hotoke.sh --only-recent --language="${{ matrix.lang }}" --reduce-pages="${{ matrix.pages }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.lang }}-${{ matrix.pages }}
          path: syllabus.sqlite

  join:
    needs: [scrape]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Download artifacts 1
        uses: actions/download-artifact@v2
        with:
          name: ja-odd
          path: db1/
      - name: Download artifacts 2
        uses: actions/download-artifact@v2
        with:
          name: ja-even
          path: db2/
      - name: Download artifacts 3
        uses: actions/download-artifact@v2
        with:
          name: en-odd
          path: db3/
      - name: Download artifacts 4
        uses: actions/download-artifact@v2
        with:
          name: en-even
          path: db4/
      - name: Find latest database
        id: search-db
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const release = await github.request('GET /repos/{owner}/{repo}/releases/latest', {
              owner: 'tuat-static-syllabus',
              repo: 'tuat-static-syllabus'
            });
            for (const {name, browser_download_url} of release.data.assets) {
              if (name != "syllabus.sqlite"){
                continue;
              }
              return browser_download_url;
            }
            throw new Error("File not found!");
      - name: Download latest database
        run: wget "${{ steps.search-db.outputs.result }}" -O syllabus.sqlite
      - name: Join artifacts
        run: node src/dbjoiner.mjs db?/syllabus.sqlite syllabus.sqlite

      - name: Decide release name
        id: get_date
        run: |
          export NOW_RAW="$(date)"
          echo "::set-output name=tag_name::$(date --date="${NOW_RAW}" +'%Y%m%d%H%M%S')"
          echo "::set-output name=human_readable::$(date --date="${NOW_RAW}" +'%Y/%m/%d %H:%M:%S')"
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_date.outputs.tag_name }}
          release_name: ${{ steps.get_date.outputs.human_readable }}
          draft: false
          prerelease: false
          body: Automatically scraped at ${{ steps.get_date.outputs.human_readable }}

      - name: Upload Releases
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: syllabus.sqlite
          asset_name: syllabus.sqlite
          asset_content_type: application/octet-stream
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: full
          path: syllabus.sqlite
